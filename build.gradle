buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.8"
    }
}

version "0.1"
group "orderbox3"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.8"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb:1.1.2"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"



    // Required by database connection
    compile 'mysql:mysql-connector-java:5.1.47'

    // Required by database connection pool
    compile 'c3p0:c3p0:0.9.1.1'

    // Required by docx4j functionality
    compile('org.docx4j:docx4j:2.8.1') {
        excludes 'commons-logging:commons-logging:1.0.4', 'commons-codec', 'commons-io'
    }

    // Required for barcode4j
    compile 'com.google.zxing:javase:2.0'
    // Required by MailService (should replace with grails mail plugin)
    compile 'org.apache.commons:commons-email:1.2'
    compile 'org.apache.commons:commons-text:1.3'
    compile 'commons-lang:commons-lang:2.6'
    compile "org.jadira.usertype:usertype.jodatime:1.9"

    // Required by LDAP
    compile "com.unboundid:unboundid-ldapsdk:2.3.6"

    // Render Zebra labels
    compile "fr.w3blog:zebra-zpl:0.0.3"

    // Required by rendering plugin (NoClassDefFoundError: org/springframework/mock/web/MockHttpServletRequest)
    // and also for the SendStockAlertsJob which needs to use the GSP template engine
    runtime 'org.springframework:spring-test:3.0.5.RELEASE'
    test 'dumbster:dumbster:1.6'

    // Required for GPars
    compile "org.codehaus.gpars:gpars:0.12"
    compile "org.codehaus.jsr166-mirror:jsr166y:1.7.0"
    compile "org.codehaus.jsr166-mirror:extra166y:1.7.0"

    // Unknown
    build('org.jboss.tattletale:tattletale-ant:1.2.0.Beta2') { excludes "ant", "javassist" }
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.6') {
        excludes "xercesImpl", "groovy", "commons-lang", "commons-codec"
    }

    // REST client
    compile 'org.apache.httpcomponents:httpclient:4.5.12'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
}
